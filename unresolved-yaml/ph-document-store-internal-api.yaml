openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/aasaru/ph-document-store-internal-api/0.9.3

info:
  version: 0.9.3
  title: ph-document-store-internal
  description: |
    Pääsuke public APIs:
    <ul>
      <li><a href="https://app.swaggerhub.com/apis/aasaru/x-road-services-consumed-by-paasuke/">X-road services consumed by Pääsuke</a></li>
      <li><a href="https://app.swaggerhub.com/apis/aasaru/paasuke-x-road-services-to-query-mandates/">X-road services to query mandates that are stored in Pääsuke (Oraakliliides)</a></li>
    </ul>
    
    Pääsuke UI APIs:
    <ul>
        <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-rolebinding-ui-api/">rolebinding-adapter-ui-api and document-adapter-ui-api</li>
        <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-mutator-ui-api/">mutator-adapter-ui-api</li>
        <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-name-ui-api"/>name-adapter-ui-api</a></li>
    </ul>
    
    Pääsuke internal APIs:
    <ul>
      <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-document-adapter-internal-api"/>document-adapter-internal-api, document-helper-internal, name-adapter-internal, sync-adapter-internal</a></li>
      <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-namespace-store/">namespace-store (UI and internal APIs)</li>
      <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-rolebinding-store/">rolebinding-store and mutator-adapter-internal</li>
      <li><a href="https://app.swaggerhub.com/apis/aasaru/ph-document-store-internal-api/">document-store-internal-api</li>
    </ul>
    
    Types:
    <ul>
      <li><a href="https://app.swaggerhub.com/domains/aasaru/paasuke-common-ui-types/">Pääsuke common UI types</a></li>
      <li><a href="https://app.swaggerhub.com/domains/aasaru/paasuke-common-types/">Pääsuke common types used in internal and xRoad APIs</a></li>
    </ul>
    
        
    <h2>Changelog</h2>
    <h3>0.9.3 - 2024-05-08</h3>
    <ul>
      <li>PH-1337 - Added method getStatsTotalAndUnique to pull statistics</li>
    </ul>
    <h3>0.9.2 - 2024-05-03</h3>
    <ul>
      <li>DocumentConfirmation renamed to DocumentApproval</li>
      <li>DocumentConfirmationType renamed to DocumentApprovalType</li>
      <li>Document.confirmations marked as deprecated, added Document.approvals</li>
    </ul>
    <h3>0.9.1 - PH-1306 - 2024-04-25</h3>
    <ul>
      <li>added service rejectDocument, DocumentConfirmationType.REJECTION</li>
    </ul>
    
    <h3>0.9.0 - PH-1306 - 2024-04-18</h3>
    <ul>
      <li>added body to addApproval() and removed addSignature() as not used</li>
    </ul>
    
    <h3>0.8.0 - PH-827 - 2024-04-04</h3>
    <ul>
      <li>added getDocuments</li>
    </ul>
    
    <h3>0.7.0 - PH-1269</h3>
    <ul>
      <li>MandateOperation element (read in by createMandateOperationsRequest and returned by query getMandateOperationsRequest) has a new field initiatorHasRole</li>
    </ul>

  contact:
    url: https://github.com/e-gov/PH/
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /represented-parties/{representedPartyCode}/documents:
    get:
      tags:
        - document-store-internal
      summary: Get documents in state
      operationId: getDocuments
      description: |
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the representedParty (who is currently being represented in eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols).</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: array
            items:
              $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/DocumentStateEnum'
      responses:
        '200':
          description: Documents that can be displayed to the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '400':
          description: bad input parameter
        '401':
          description: Unauthorized. Person JWT not included.
        '403':
          description: Forbidden. The user is not allowed to view documents.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-ui-types/1.5#/components/schemas/UiProblem'
    post:
      operationId: createDocument
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the representedParty (who is currently being represented in eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols).</p>
          example: EE10391131
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                createdBy:
                  type: string
                  example: EE49109300123
                state:
                  type: string
                  example: DRAFT
                adminPartyCode:
                  type: string
                  example: EE70006317
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentWithUuid'
          # -----------------------------------------------------
          # Links
          # -----------------------------------------------------
          links:
            GetDocumentByUuid:
              operationId: getDocumentByUuid
              parameters:
                userId: '$response.body#/documentUuid'
              description: >
                The `documentUuid` value returned in the response can be used as
                the `documentUuid` parameter in `GET /mandate-operations-requests/{requestUuid}`.
          # -----------------------------------------------------
        '400':
          description: Incorrect format of the payload
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/Problem'

  /represented-parties/{representedPartyCode}/documents/{documentUuid}:
    get:
      summary: Get document info by UUID.  
      description: |
        When mandates were added, deleted or sub-delegated then a signed asicE container might have been created. Pääsuke stores this document (signed container) on its side and this can be fetched using this service.
      operationId: getDocumentByUuid
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Document (signed container) UUID

      responses:
        '200':
          description: Document info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '403':
          description: Forbidden. Request not authorized.
        '404':
          description: Document was not found.
    put:
      summary: Update doument state
      description: |
        Update document state
      operationId: updateDocument
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Document (signed container) UUID
      responses:
        '200':
          description: Report 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '403':
          description: Forbidden. Request not authorized.
        '404':
          description: Document was not found.
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/DocumentState'


  /represented-parties/{representedPartyCode}/documents/{documentUuid}/mandate-operations-requests:
    post:
      summary: Store a request (that has just arrived from the user). 
      operationId: createMandateOperationsRequest
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string 
        - name: documentUuid
          in: path
          description: Document UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/MandateOperationsRequestUuid'
          # -----------------------------------------------------
          # Links
          # -----------------------------------------------------
          links:
            GetMandateOperationsRequest:
              operationId: getMandateOperationsRequest
              parameters:
                userId: '$response.body#/requestUuid'
              description: >
                The `requestUuid` value returned in the response can be used as
                the `requestUuid` parameter in `GET /mandate-operations-requests/{requestUuid}`.
          # -----------------------------------------------------
        '400':
          description: Incorrect format of the payload
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/Problem'
      requestBody:
        content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/MandateOperationsRequest'

  /represented-parties/{representedPartyCode}/documents/{documentUuid}/mandate-operations-requests/{requstUuid}:
    get:
      summary: Get MandateOperationsRequest by requestUuid
      description: |
        MandateOperationsRequest object contains the needed info for generating a PDF
      operationId: getMandateOperationsRequest
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          description: Document UUID
          required: true
          schema:
            type: string
            format: uuid
        - name: requstUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: MandateOperationsRequest UUID
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/MandateOperationsRequest'

  /represented-parties/{representedPartyCode}/documents/{documentUuid}/mandate-operations-requests/{requstUuid}/processing-report:
    get:
      summary: Get processing report of a MandateOperationsRequest.  
      description: |
        When document is processed (by sending out individual requests over x-road or internally in Pääsuke) then for each MandateOperation a result is stored. This method pulls out these results for a MandateOperationsRequest.
      operationId: getMandateOperationsRequestReport
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Document (signed container) UUID
        - name: requstUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: MandateOperationsRequest UUID
      responses:
        '200':
          # This used to be: $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-ui-types/1.3#/components/responses/UiActionResults'
          $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/responses/ProcessingResults'
        '202':
          description: The document is still being processed. Please try in a short while.
        '403':
          description: Forbidden. Request not authorized.
        '404':
          description: The document or MandateOperationsRequest was not found.




  /represented-parties/{representedPartyCode}/documents/{documentUuid}/mandate-operations-requests/{requestUuid}/mandate-operations/{actionOrUiUuid}/processing-result:
    post:
      summary: Store the information about how processing of a single mandateOperation went
      operationId: storeMandateOperationProcessingResult
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string 
        - name: documentUuid
          in: path
          description: Document UUID
          required: true
          schema:
            type: string
            format: uuid
        - name: requestUuid
          in: path
          description: MandateOperationsRequest UUID
          required: true
          schema:
            type: string
            format: uuid
        - name: actionOrUiUuid
          in: path
          description: actionUuid or uiUuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/MandateOperationsRequestUuid'
          # -----------------------------------------------------
          # Links
          # -----------------------------------------------------
          links:
            GetMandateOperationsRequest:
              operationId: getMandateOperationsRequest
              parameters:
                userId: '$response.body#/requestUuid'
              description: >
                The `requestUuid` value returned in the response can be used as
                the `requestUuid` parameter in `GET /mandate-operations-requests/{requestUuid}`.
          # -----------------------------------------------------
      requestBody:
        content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/MandateOperationProcessingResult'


  /represented-parties/{representedPartyCode}/documents/{documentUuid}/approvals:
    post:
      summary: Add an approval.
      operationId: addApproval
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          description: Document UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Approval was sucesfully saved.
        '400':
          description: Incorrect payload, for example type is not 'CONFIRMATION' or document is in incorrect state.
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentApproval'
                       


  /represented-parties/{representedPartyCode}/documents/{documentUuid}/pdfs:
    post:
      summary: Save pdfs
      operationId: savePdfs
      tags:
        - document-store-internal
      description: A request with a body containing a zip file which contains documents pdf-s
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string 
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Zip file containing pdfs
        required: true
        content:
          application/zip:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Pdfs were saved successfully
        '409':
          description: Inconsistent state
        '404':
          description: Document was not found
        '424':
          description: Failed external dependency
        '500':
          description: Other
    get:
      summary: Gets pdfs associated with this document
      operationId: getPdfs
      tags:
        - document-store-internal
      description: |
        Gets pdfs
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Pdfs in a zip file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '404':
          description: Document not found
        '424':
          description: Failed external dependency
  /represented-parties/{representedPartyCode}/documents/{documentUuid}/hashcode-container:
    get:
      summary: Gets hashcontainer associated with this document
      operationId: getHashcodeContainer
      tags:
        - document-store-internal
      description: |
        Gets hashcontainer
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: hashcontainer
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '404':
          description: not found
        '409':
          description: Inconsistent data
        '424':
          description: Failed external dependency
    post:
      summary: Save an empty hashcode container
      description: Save an empty hashcode container. Should only be called once, when creating the SiGa empty container and persisting it. If the document specified already has an associated hashcode container, an exception should be thrown.
      operationId: saveHashcodeContainerWithoutSignatures
      tags:
        - document-store-internal
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Binary zip file (SiGa hashcode container)
        required: true
        content:
          application/zip:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: "Saved successfully"
        '409':
          description: A hash container already exists for this document. This api is intended to be used for only saving an empty hashcontainer.
        '424':
          description: Failed external dependency
        '500':
          description: Internal server error
          
  /represented-parties/{representedPartyCode}/documents/{documentUuid}/signers/{signer}:
    post:
      summary: Save information about new signature as asicE and hashcode container
      operationId: saveAsiceSignerAndHashcodeContainer
      tags:
        - document-store-internal
      description: |
        Save hashcode container and asicE in a single transaction.
        
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: signer
          in: path
          required: true
          description: identifier of the person who just signed
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Hashcode container and asice
        required: true
        content:
          application/json:
            schema:
              $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/SaveAsiceHashcontainerAndSigner'
      responses:
        '200':
          description: Saved successfully
        '400':
          description: The document is not associated with the supplied user
        '404':
          description: Container or document does not exist
        '409':
          description: Inconsistent state
        '424':
          description: Failed external dependency
        '500':
          description: Saving failed

  /represented-parties/{representedPartyCode}/documents/{documentUuid}/rejections:
    post:
      summary: Mark document as rejected
      operationId: rejectDocument
      tags:
        - document-store-internal
      description: |
        Save hashcode container and asicE in a single transaction.
        
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Who rejected the document.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                rejector:
                  $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/Person'
              
      responses:
        '200':
          description: Saved successfully
        '400':
          description: The document is not associated with the supplied user
        '404':
          description: Container or document does not exist
        '409':
          description: Inconsistent state
        '424':
          description: Failed external dependency
        '500':
          description: Saving failed

  /represented-parties/{representedPartyCode}/documents/{documentUuid}/signers:
    get:
      summary: Gets list of person identifiers who have signed the document
      operationId: getAllSignedParties
      tags:
        - document-store-internal
      description: |
        Gets list of person identifiers who have signed the document
      parameters:
        - name: representedPartyCode
          in: path
          description: <b>Identifier of the represented party (who is currently being represented in Eesti.ee).</b> Can be one of the follwing&colon; <p>a)  'EE' followed by 8-digit legal entity code from Estonian Business Registry</p> <p>b) 'EE' followed by 11-digit national identity number</p> <p>c) Two-letter country code followed by eIDAS identification (1...254 symbols) - Pääsuke uses the value that was returned by Tara when the person logged into eesti.ee portal.</p>
          example: EE10391131
          required: true
          schema:
            type: string
        - name: documentUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Array of person identifiers who signed the documents
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: person identifier
        '404':
          description: not found

  /statistics/total-and-unique:
    get:
      summary: Pull statistics about total and unique operations from the database
      operationId: getStatsTotalAndUnique
      tags:
        - document-store-internal
      description: |
        Gets list of person identifiers who have signed the document
      parameters:
        - name: firstDay
          in: query
          description: First day of period
          required: true
          schema:
            type: string
            format: date
            example: 2024-04-01
            
        - name: lastDay
          in: query
          description: Last day of period (included)
          required: true
          schema:
            type: string
            format: date
            example: 2024-04-07
      responses:
        '200':
          description: Array of person identifiers who signed the documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsTotalAndUniqueTable'
        '404':
          description: not found

components:
  schemas:
    StatsTotalAndUniqueTable:
      type: array
      items: 
        $ref: '#/components/schemas/StatsTotalAndUniqueRow'
    
    StatsTotalAndUniqueRow:
      type: object
      properties:
        order:
          type: integer
          description: The rows with lower value shoulbe be displayed first
          example: 100
        groupType:
          type: string
          example: TOTAL_ORDER
        descriptionStart:
          type: string
          example: Kokku täideti 
        total:
          type: integer
          example: 309
        desciptionMiddle:
          type: string
          example: korraldust, mis oli koostatud
        unique:
          type: integer
          example: 39
        descriptionEnd:
          type: string
          example: erineva isiku nimel
        firstDate:
          type: string
          format: date
          description: Report start date (same as passed in as a parameter)
          example: 2024-04-01
        lastDate:
          type: string
          format: date
          description: Report end date (same as passed in as a parameter)
          example: 2024-04-07
    
    
    Document:
      type: object
      properties:
        representedPartyCode:
          type: string
          example: EE12345678
        owner:
          type: string
          example: EE49109300123
        state:
          $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/DocumentStateEnum'
        documentUuid:
          type: string
          format: uuid
        mandateOperationsRequests:
          type: array
          items:
            $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/MandateOperationsRequestUuid'
        expires:
          type: string
          format: date-time
        confirmations:
          type: array
          description: Deprecated and marked to be removed in the future. Use approvals instead.
          items: 
            $ref: '#/components/schemas/DocumentApproval'
        approvals:
          type: array
          description: List of confirmations/signatures
          items: 
            $ref: '#/components/schemas/DocumentApproval'
    
    DocumentApproval:
      type: object
      required: 
        - person
        - type
      properties:
        person:
          $ref: 'https://api.swaggerhub.com/domains/aasaru/paasuke-common-types/0.12#/components/schemas/Person'
        type:
          $ref: '#/components/schemas/DocumentApprovalType'
        dateTime:
          type: string
          format: date-time

    DocumentApprovalType:
      type: string
      enum: [CONFIRMATION, SIGNATURE, REJECTION]

            
    DocumentWithUuid:
      type: object
      properties:
        documentUuid:
          type: string
          format: uuid